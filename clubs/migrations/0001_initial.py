# Generated by Django 2.2.6 on 2019-11-04 10:30

import clubs.models
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import multiselectfield.db.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='City',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, verbose_name='name')),
                ('url', models.CharField(max_length=50, verbose_name='url')),
            ],
            options={
                'verbose_name': 'city',
                'verbose_name_plural': 'cities',
            },
        ),
        migrations.CreateModel(
            name='Club',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, verbose_name='name')),
                ('code_number', models.PositiveIntegerField(default=0, verbose_name='номер клуба')),
                ('slug', models.SlugField(verbose_name='slug')),
                ('district', models.CharField(blank=True, max_length=50, verbose_name='district')),
                ('metro', models.CharField(blank=True, max_length=50, verbose_name='metro')),
                ('address', models.CharField(max_length=100, verbose_name='address')),
                ('phone', models.CharField(max_length=50, verbose_name='phone')),
                ('email', models.EmailField(max_length=254, verbose_name='email')),
                ('requisites', models.TextField(blank=True, verbose_name='requisites')),
                ('type', models.CharField(choices=[('CM', 'коммерческий (развлекатальный)'), ('CS', 'коммерческо-спортивный'), ('ST', 'спортивный'), ('ET', 'элитный (закрытый)')], default='CM', max_length=5, verbose_name='type')),
                ('website', models.URLField(blank=True, verbose_name='website')),
                ('payment_methods', multiselectfield.db.fields.MultiSelectField(choices=[('CS', 'наличный расчет'), ('VS', 'VISA'), ('MC', 'MasterCard'), ('MR', 'МИР')], default='CS', max_length=50, verbose_name='payment methods')),
                ('is_active', models.BooleanField(default=False, verbose_name='club is active')),
                ('is_open', models.BooleanField(default=True, verbose_name='club is open')),
                ('is_verified', models.BooleanField(default=False, verbose_name='club is verified')),
                ('is_available_for_booking', models.BooleanField(default=False, verbose_name='club is available for booking')),
                ('parking', models.BooleanField(default=False, verbose_name='parking')),
                ('wardrobe', models.BooleanField(default=False, verbose_name='wardrobe')),
                ('wc', models.BooleanField(default=False, verbose_name='wc')),
                ('air_conditioning', models.BooleanField(default=False, verbose_name='air conditioning')),
                ('wifi', models.BooleanField(default=False, verbose_name='Wi-Fi')),
                ('smoking_room', models.BooleanField(default=False, verbose_name='smoking room')),
                ('vip_hall', models.BooleanField(default=False, verbose_name='VIP hall')),
                ('barroom', models.BooleanField(default=False, verbose_name='barroom')),
                ('created', models.DateField(auto_now_add=True)),
                ('updated', models.DateField(auto_now=True)),
                ('city', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='clubs.City', verbose_name='city')),
            ],
        ),
        migrations.CreateModel(
            name='Country',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, verbose_name='name')),
                ('url', models.CharField(max_length=50, verbose_name='url')),
            ],
            options={
                'verbose_name': 'country',
                'verbose_name_plural': 'countries',
            },
        ),
        migrations.CreateModel(
            name='Game',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(choices=[('RS', 'русский бильярд'), ('PL', 'пул'), ('SK', 'снукер'), ('CR', 'карамболь')], default='RS', max_length=5, verbose_name='game')),
                ('is_available_for_booking', models.BooleanField(default=True, verbose_name='game is available for booking')),
                ('booking_duration', models.PositiveSmallIntegerField(default=2, verbose_name='duration of booking')),
                ('booking_days_in_advance', models.PositiveSmallIntegerField(default=7, verbose_name='количество дней вперед для бронирования')),
                ('booking_hours_before', models.PositiveSmallIntegerField(default=1, verbose_name='количество часов до бронирования')),
                ('booking_step', models.TimeField(default='00:30', verbose_name='шаг брони')),
                ('club', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='clubs.Club', verbose_name='club')),
            ],
        ),
        migrations.CreateModel(
            name='Hall',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, verbose_name='hall')),
                ('is_available_for_booking', models.BooleanField(default=True, verbose_name='hall is available for booking')),
                ('booking_duration', models.PositiveSmallIntegerField(default=2, verbose_name='duration of booking')),
                ('booking_days_in_advance', models.PositiveSmallIntegerField(default=7, verbose_name='количество дней вперед для бронирования')),
                ('booking_hours_before', models.PositiveSmallIntegerField(default=1, verbose_name='количество часов до бронирования')),
                ('booking_step', models.TimeField(default='00:30', verbose_name='шаг брони')),
                ('club', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='clubs.Club', verbose_name='club')),
            ],
        ),
        migrations.CreateModel(
            name='Table',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=5, verbose_name='table number')),
                ('is_available_for_booking', models.BooleanField(default=True, verbose_name='table is available for booking')),
                ('booking_duration', models.PositiveSmallIntegerField(default=2, verbose_name='duration of booking')),
                ('booking_days_in_advance', models.PositiveSmallIntegerField(default=7, verbose_name='количество дней вперед для бронирования')),
                ('booking_hours_before', models.PositiveSmallIntegerField(default=1, verbose_name='количество часов до бронирования')),
                ('booking_step', models.TimeField(default='00:30', verbose_name='шаг брони')),
                ('club', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='clubs.Club', verbose_name='club')),
                ('game', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='clubs.Game', verbose_name='game')),
                ('hall', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='clubs.Hall', verbose_name='hall')),
            ],
        ),
        migrations.CreateModel(
            name='WorkingTime',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(choices=[('MO', 'понедельник'), ('TU', 'вторник'), ('WE', 'среда'), ('TH', 'четверг'), ('FR', 'пятница'), ('SA', 'суббота'), ('SU', 'воскресенье')], max_length=2, verbose_name='day of the week')),
                ('opening_time', models.TimeField(blank=True, null=True, verbose_name='opening time')),
                ('closing_time', models.TimeField(blank=True, null=True, verbose_name='closing time')),
                ('day_off', models.BooleanField(default=False, verbose_name='day off')),
                ('is_available_for_booking', models.BooleanField(default=True, verbose_name='day is available for booking')),
                ('club', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='clubs.Club', verbose_name='club')),
            ],
            options={
                'verbose_name': 'working time',
                'verbose_name_plural': 'working time',
            },
        ),
        migrations.CreateModel(
            name='TableHolding',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start', models.DateTimeField(verbose_name='время начала')),
                ('end', models.DateTimeField(verbose_name='время окончания')),
                ('table', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='clubs.Table', verbose_name='table')),
            ],
        ),
        migrations.CreateModel(
            name='SocialNetwork',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(choices=[('VK', 'Вконтакте'), ('OK', 'Одноклассники'), ('FB', 'Facebook'), ('TW', 'Twitter'), ('TM', 'Telegram'), ('IN', 'Instagram')], max_length=5, verbose_name='name')),
                ('address', models.URLField(verbose_name='account')),
                ('club', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='clubs.Club', verbose_name='club')),
            ],
        ),
        migrations.CreateModel(
            name='Region',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, verbose_name='name')),
                ('country', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='clubs.Country', verbose_name='country')),
            ],
        ),
        migrations.CreateModel(
            name='Promotion',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, verbose_name='promotion')),
                ('is_active', models.BooleanField(default=True, verbose_name='промоакция активна')),
                ('is_perpetual', models.BooleanField(default=True, verbose_name='промоакция бессрочная')),
                ('date_from', models.DateTimeField(blank=True, verbose_name='date from')),
                ('date_to', models.DateTimeField(blank=True, verbose_name='date to')),
                ('days_of_the_week', multiselectfield.db.fields.MultiSelectField(choices=[('MO', 'понедельник'), ('TU', 'вторник'), ('WE', 'среда'), ('TH', 'четверг'), ('FR', 'пятница'), ('SA', 'суббота'), ('SU', 'воскресенье')], max_length=20, verbose_name='days of the week')),
                ('time_from', models.TimeField(blank=True, verbose_name='time from')),
                ('time_to', models.TimeField(blank=True, verbose_name='time to')),
                ('discount', models.PositiveSmallIntegerField(default=0, verbose_name='discount')),
                ('promo_code', models.CharField(blank=True, max_length=50, verbose_name='promo code')),
                ('created', models.DateField(auto_now_add=True)),
                ('updated', models.DateField(auto_now=True)),
                ('club', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='clubs.Club', verbose_name='club')),
                ('tables', models.ManyToManyField(to='clubs.Table', verbose_name='tables')),
            ],
        ),
        migrations.CreateModel(
            name='Price',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('price_from', models.TimeField(verbose_name='from')),
                ('price_to', models.TimeField(verbose_name='to')),
                ('value', models.DecimalField(decimal_places=2, max_digits=7, verbose_name='цена')),
                ('is_available_for_booking', models.BooleanField(default=True, verbose_name='hours are available for booking')),
                ('club', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='clubs.Club', verbose_name='club')),
                ('tables', models.ManyToManyField(to='clubs.Table', verbose_name='tables')),
                ('working_times', models.ManyToManyField(to='clubs.WorkingTime', verbose_name='working times')),
            ],
        ),
        migrations.CreateModel(
            name='Photo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file', models.ImageField(upload_to=clubs.models.update_filename, verbose_name='photo')),
                ('is_main', models.BooleanField(default=False, verbose_name='main photo')),
                ('club', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='clubs.Club', verbose_name='club')),
            ],
        ),
        migrations.CreateModel(
            name='NotAvailableTime',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start', models.DateTimeField(verbose_name='недоступен с')),
                ('end', models.DateTimeField(verbose_name='недоступен до')),
                ('club', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='clubs.Club', verbose_name='club')),
                ('tables', models.ManyToManyField(to='clubs.Table', verbose_name='tables')),
            ],
            options={
                'verbose_name': 'not available time',
                'verbose_name_plural': 'not available time',
            },
        ),
        migrations.AddField(
            model_name='game',
            name='hall',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='clubs.Hall', verbose_name='hall'),
        ),
        migrations.AddField(
            model_name='club',
            name='country',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='clubs.Country', verbose_name='country'),
        ),
        migrations.AddField(
            model_name='club',
            name='region',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='clubs.Region', verbose_name='region'),
        ),
        migrations.AddField(
            model_name='club',
            name='users',
            field=models.ManyToManyField(blank=True, to=settings.AUTH_USER_MODEL, verbose_name='users'),
        ),
        migrations.AddField(
            model_name='city',
            name='country',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='clubs.Country', verbose_name='country'),
        ),
        migrations.AddField(
            model_name='city',
            name='region',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='clubs.Region', verbose_name='region'),
        ),
        migrations.CreateModel(
            name='Booking',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start', models.DateTimeField(verbose_name='время начала')),
                ('end', models.DateTimeField(verbose_name='время окончания')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('status', models.CharField(choices=[('AC', 'подтверждено'), ('CN', 'отменено'), ('AT', 'активно'), ('CP', 'завершено'), ('PD', 'оплачено')], default='AC', max_length=3, verbose_name='статус')),
                ('code_number', models.PositiveIntegerField(verbose_name='номер брони')),
                ('client_name', models.CharField(max_length=50, verbose_name='имя')),
                ('client_email', models.EmailField(blank=True, max_length=254, verbose_name='email')),
                ('cost', models.DecimalField(decimal_places=2, max_digits=7, verbose_name='стоимость')),
                ('commission', models.DecimalField(decimal_places=2, max_digits=7, verbose_name='комиссия')),
                ('club', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='clubs.Club', verbose_name='club')),
                ('game', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='clubs.Game', verbose_name='game')),
                ('hall', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='clubs.Hall', verbose_name='hall')),
                ('table', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='clubs.Table', verbose_name='table')),
            ],
        ),
    ]
